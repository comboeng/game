[{"categories":["アセット"],"contents":"注目アセット 面白そうなアセットだったのでメモ\nAgora Video SDK for Unity\n プレイヤー同士で、低遅延でビデオやオーディオ通信を実現する。\n最近、Clubhouse(クラブハウス)という会話アプリが流行っているけど。\nそれらの系統だと思う。\nFree版なので、おそらく制限あると思うが。時間あったら試してみたい。\nちなみにPhotonVoiceは、実装したことがある。\n制限について Your first 10,000 minutes are free each month! 毎月10000分は無料！？\n","href":"https://comboeng.github.io/game/posts/asset7/","tags":["Agora Video SDK"],"title":"[Unity]注目アセット「Agora Video SDK for Unity」"},{"categories":["STEAM"],"contents":"STEAMでセール中です STEAMで旧正月セール中です。\n2021年2月15日10時（アメリカ太平洋時間）までとなってます。\nSTEAM 旧正月セール\n狙っているゲーム 購入しようかと迷っているゲームは以下です。\n Sekiro™: Shadows Die Twice - GOTY Edition\n面白そう。海外でGOTYという賞をもらっている。 嗜血印 Bloody Spell えっちいそう（え。\n  まぁ、Sekiroだけ買うかな。。。\nその他 （一応）自分はゲームクリエイター側ですが、クリエイターがゲームをプレイするってどうなんですかね。\nどうっていうのは、\nかなり昔NINTENDOの偉い人が「クリエイターはゲームはあまりしないほうが良いって」\nと、言ってたのを常々思い出すからです。\n僕はむしろやっておくべきと思うのですが。\n","href":"https://comboeng.github.io/game/posts/game1/","tags":["セール"],"title":"STEAM、旧正月セールやってるよ"},{"categories":["UE4"],"contents":"この記事について アンリアルエンジン（UE）を開発している、Epic Gamesが開発したMetaHuman Creatorというアプリがすごいです!\nMetaHuman Creator プロジェクトに関する最新の開発情報をいち早くお知りになりたいですか？\nこちらにご登録いただいた方には、デジタル ヒューマンと MetaHuman Creator プロジェクトに関する記事やイベント、お知らせをお送りしますhttps://t.co/tHzs8GWpwl pic.twitter.com/QSSouzRtDy\n\u0026mdash; アンリアルエンジン (@UnrealEngineJP) February 10, 2021  上記、アンリアルエンジン上で動いている様子です。\nだからどうした！？ まぁ、これがあることで、私面白いゲームを作れるわけではないのですが。 UE4を持っているなら、誰でも使えるみたいで、この超リアルな表情がどう作れるのか\nちょっと触ってみたいです。\nそして、\nいままでの記事から見て分かる通り、私はUnityを使ってゲームを制作しているのですが。\n最近結構うんざりするんですよね。使い勝手の悪さに。\nまぁUE4も使いづらい部分あると思うのですが、Unityとの違いに興味があり。\nUE4使ってみたいと思う所です。\n","href":"https://comboeng.github.io/game/posts/asset6/","tags":["MetaHuman Creator"],"title":"[アンリアルエンジン]MetaHuman Creatorというアプリがすごい"},{"categories":["雑談"],"contents":"Stadiaゲーム開発スタジオを閉鎖 Focusing on Stadia’s future as a platform, and winding down SG\u0026amp;E\nGoogleが発表していたゲーミングサービス「Stadia」について、\nGoogleは自社での独占ゲーム開発を断念したと発表した。\n↑のサイトでの Creating best-in-class... Creating best-in-class games from the ground up takes many years and significant investment, and the cost is going up exponentially. Given our focus on building on the proven technology of Stadia as well as deepening our business partnerships, we’ve decided that we will not be investing further in bringing exclusive content from our internal development team SG\u0026amp;E, beyond any near-term planned games.  \nプラットフォーム事業は継続 Twitterで終わったとか言う人多かったけど、違うぞ！\nプレットフォームとしては続けていくよう。\n↑のサイトでの Creating best-in-class... You can continue playing all your games on Stadia and Stadia Pro, and we’ll continue to bring new titles from third parties to the platform.   \nプレットフォーマーとして専任するだけ。\n個人的見解 何も知らない・知識もない私の個人的見解\n アサクリのクリエイターを雇ったようだけど、作れるのはやっぱりアサクリだった クラウドゲームということだけど、現状の技術ではやっぱり難しい という当たり前の見解しかない。\nいづれにしても、他社の知識を取り込みたいということかな。  あと、早いタイミングでの方針転換はさすがGoogle。\nサードパーティーへの支援を強化するという意味で下手に仕様を縛るより、その方が良いかも。\n","href":"https://comboeng.github.io/game/posts/talk1/","tags":["Stadia"],"title":"Stadiaは終了というわけではないよ"},{"categories":[""],"contents":"2021年2月のPCゲーム/スマホアプリの売上 http://game-i.daa.jp/\nhttps://store.steampowered.com/\nから抜粋\nPCゲームでは、仁王２やってみたい。\nスマホアプリでは、\nプロ野球スピリッツＡと原神をやって、システム周りを調べたい。\nPCゲーム  Yakuza Remastered Collection 仁王２ Complete Edition The Elder Scrolls V: Skyrim Special Edition Cyberpunk 2077 ドラゴンクエストXI　過ぎ去りし時を求めて S Nobunaga\u0026rsquo;s Ambition: Souzou with Power Up Kit (Japanese version) Ori and the Will of the Wisps RimWorld ライザのアトリエ２ ～失われた伝承と秘密の妖精～ Dyson Sphere Program  スマホアプリ  プロ野球スピリッツＡ Fate/Grand Order パズル＆ドラゴンズ モンスターストライク Pokémon GO 原神 荒野行動 プリンセスコネクト！Re：Dive  ","href":"https://comboeng.github.io/game/posts/seller202102/","tags":[""],"title":"2021年2月のPCゲーム/スマホアプリの売上"},{"categories":["レビュー"],"contents":"  クラッシュ ロワイヤル 今一番ハマっています という記事をあげましたが。\nやらなくなりました。\nやらなくなった考察を。\n2020年10月ですごい面白いと思ったのですが、3ヶ月で飽き。\n落差がすごいですね。\nやらなくなった理由   過疎感がさらにすごくなった。\nたった3ヶ月なんですが、、\nマッチングするまで1,2分待つこともザラです。\n人がさらに減った感じがあります。\n  煽りがマジで凄まじい\nこれが一番の理由です。\n対戦中にアイコンを表示することができるのですが。\n笑うアイコンが表示できて、それが相手をあざ笑っている感があります。\nYouTubeとか見ても、そういう風潮があることが言われている。\nで、アイコンを非表示とかできるだけど、アイコンをプレゼントされる機会があり、\nそれを使うには非表示→表示にしないといけなく、相手のアイコンが表示される。\n所詮ゲームのアイコンなんだけど、それを受けて感情がぶれないかというと100%嘘で、。\nこんなシステム無くした方が良いんだけど、アプリがアイコンを課金アイテムで販売している状況。\n  目新しさが無い\n前の記事でも書いたけど、キャラのレベルがカンストしてからが本番なんだけど。\nやっぱり、そこまで到達するのが長いので（到達できていない）\nチームが固定されてしまう。\nそうなるといつも同じ戦略なので、目新しさが無くなるというもの。\n  自分が運営だったらどうするか うーーん。\n難しいし、自分が運営をやることは無いので、無駄な考察なんですが。\n取り敢えず、アイコンの表示について、自分の表示と相手の表示を分ける。\n自分のは表示できるけど、相手のアイコンは表示出来ない設定とか。\nPvPよりも、プレイヤーvsコンピューターをメインにしたほうが良いと思う。\nあと、マッチングフィルターをもう少し工夫したほうが良いかなと。\nキングレベルが近いとかじゃなくて、カード総計のとか、もうやってるかもしれないけど。\nカードのレベル差による一方的な試合が多いように感じた。\n","href":"https://comboeng.github.io/game/posts/crash2/","tags":["クラロワ"],"title":"クラッシュ ロワイヤル やらなくなった"},{"categories":["プログラム"],"contents":"エラー詳細 WebGLで出力したゲームについて、ゲーム中にUnityWebRequestなどで自サーバにアクセスすると、\nUNKNOWNエラーになります。\nもしかしたら、自サーバの設定が原因かもしれません。\n解決はできませんでした。\nUnityEditor上やPCで出力した場合は、うまくいくんですよネェ。\n","href":"https://comboeng.github.io/game/posts/howto13/","tags":["UnityWebRequest"],"title":"WebGLでゲームを出力するとUnityWebRequestでエラーになる"},{"categories":["プログラム"],"contents":"目的 UnityプレジェクトをGit管理する場合のignore設定のリンク\n参照先 gitignore/Unity.gitignore\n","href":"https://comboeng.github.io/game/posts/howto12/","tags":["ignore設定"],"title":"UnityプレジェクトをGit管理するときのignore設定"},{"categories":["プログラム"],"contents":"NavMeshについて　設定手順とか   歩く部分をNavigation Staticにする。 Navigation StaticはInspectorInspectorのStaticにて\n  Navigation画面を開く NavigationはUnityツールバーのWindow \u0026gt; AI \u0026gt; Navigation\nversionによって変わるイメージ（やめてくれ）\n  Navigation設定を行う 歩かせたくない場所はNot walkable\n歩かせたい場所はWalkable\nとかにする。\n  設定 Bakeタブを開いて、Bakeボタンをタップ。\n歩ける場所は色が水色となる。\n  NPC設定 NPCのGameObectにNav Mesh Agentをアタッチする。\n  Nav Mesh Agentのプロパティについて Unity ナビメッシュエージェント\n  ","href":"https://comboeng.github.io/game/posts/howto11/","tags":["NavMesh"],"title":"NavMeshについて"},{"categories":["プログラム"],"contents":"空の設定方法 Window -\u0026gt; Rendering -\u0026gt; Light Settings\nSkybox Materialを修正\nこれだけなのに忘れる。\nというか、Light Settingの表示がUnityのバージョンごとに変更している（気がする。。。）\n","href":"https://comboeng.github.io/game/posts/howto10/","tags":["空"],"title":"空の設定"},{"categories":["アセット"],"contents":"年末年始セールやってます 12月15日 17:00 - 1月8日 16:59までですよ。\nオススメはなんだろう。。。\nEasy Save\nFinal IK\nDOTween Pro\nとかでしょうか。\n","href":"https://comboeng.github.io/game/posts/asset5/","tags":["年末年始セール"],"title":"年末年始セールやってるよ"},{"categories":[""],"contents":"この記事について AnimationControllerを使ったコンボ攻撃の実装方法をUnity Japanの方が動画にしてくださったのでそのリンクです。\nAnimatorControllerを使ってコンボ攻撃する方法\nこの声の方の上げる動画はかなり実用的なものばかりですね。\nこういう動画がクリエイターには必要だと思います。\n要チェックです。\n","href":"https://comboeng.github.io/game/posts/howto9/","tags":["AnimationController","コンボ"],"title":"AnimationControllerを使ったコンボ攻撃理[リンク]"},{"categories":["プログラム"],"contents":"この記事について MacOSをBigSurにアップデートしたところ、\nブラウザ上でのWebGLが表示されなくなった。\n自分のアプリだけでなく、他のサイト（例えばUnityRommなどのゲーム）でも同様に表示されなくなった。 コンソールを見るとUnityLoader.jsでエラーになっている。 なので、その対応メモ。\n対応メモ 以下ページに対応策が書いてあった。\nページ中盤にはる、WebglPostBuild.csプログラムを\nAssets/Scripts/Editor配下に配置すると、ブラウザ上でWebGLが実行されるようになった。 Bug? Generated UnityLoader.js fails in iOS 14 public beta\n以上。\n","href":"https://comboeng.github.io/game/posts/howto8/","tags":["WebGL"],"title":"MacOS BigSurだとブラウザ上でWebGLの実行ができない件"},{"categories":["プログラム"],"contents":"はじめに FirebaseRealtimeにて設定したデータベースを、UnityのC#プログラムで取得する方法です。\n公式ドキュメント Googleによる公式ドキュメントは以下となります。\nUnity プロジェクトに Firebase を追加する\nUnity の Firebase Realtime Database を使ってみる\n環境について 各ツールのバージョン要件は以下となります。\n Unity 5.3 以降 Xcode 9.4.1 以降 CocoaPods 1.4.0 以降 iOS 8 以降 Android API レベル 16 以降  またこの記事ではMacOSでの手順となります。\nFirebase プロジェクトを作成 ブラウザより、Firebaseに接続して、アプリを登録します。\nFirebase\nアプリを登録して構成ファイルをダウンロード 引き続きFirebaseにて、アプリを登録します。\n登録後にダウンロードできる構成ファイルが必要になります。\niOSかAndroidどちらかを登録しないと、Firebaseからデータを取得できないように見受けられました。\n今回はAndroidアプリを登録しました。\nFirebaseコンソールよりAndroidプラットフォームを選択。\nアプリのパッケージ名を決めて、設定する必要があります。\nちなみに、、後から名前は変更できないようです。\n削除して新しく追加は可能なようです。\n構成ファイルをダウンロードしたら、ココの手順は終わりにしました。\n「Firebase SDKの追加」・「アプリを実行してインストールを確認」は行っておりません。\nダウンロードした構成ファイル「google-services.json」は\nUnityプロジェクトの「Assets」フォルダ配下の「StreamingAssets」フォルダ配下に設置。\n「StreamingAssets」フォルダは自分で作成しました。\n※StreamingAssets配下に構成ファイルが無いというエラーが出たので、このようにしました。\nFirebase Unity SDK を追加 次に、\n(SDKファイル)[https://firebase.google.com/download/unity?hl=ja]\nよりFirebase Unity SDKをダウンロードして、解凍します。\n2Gほどのサイズがあります。\nダウンロード後は、Unityより\n[Assets] \u0026gt; [Import Package] \u0026gt; [Custom Package]   を選択後、dotnet4/FirebaseDatabase.unitypackageを選択して、インポートします。\nちなみにdotnet3フォルダもありますが、donet4フォルダのものを選択しました。ご注意ください。\nUnity 5.x 以前ではの場合、dotnet3フォルダを利用するようです。\nデータベースを作成 ここからはRealtime Databaseにて実際にデータベースを作成します。\nブラウザより、Firebase コンソールの [Realtime Database] セクションに移動します。\n「データベースを作成」をクリックします。\nRealtime Database のセキュリティ ルールでは「テストモード」を選択し、「有効にする」ボタンをクリックします。\nテストモードとロックモードの違いは以下となります。\nテストモード モバイルおよびウェブ クライアント ライブラリを使用する場合に適していますが、すべてのユーザーがデータを読み書きできます。 ウェブ、iOS、Android SDK を使用する場合は、テストモードを選択します。 ロックモード モバイルおよびウェブ クライアントからのすべての読み書きを拒否します。認証されたアプリケーション サーバーは引き続きデータベースにアクセスできます。   テストモードの設定については、\n(Firebase Realtime Database ルールについて)[https://firebase.google.com/docs/database/security?hl=ja]\nも参照してください。\nRealtime Databaseページが表示され、以下のように表記されています。\nデータの横にカーソルを移動すると、「＋」ボタンが表示されるので、以下のように設定しました。\nプログラムにて設定したデータを取得 UnityにてC#プログラムでRealtime Databaseで設定したデータを取得します。\nデータ取得 using Firebase; using Firebase.Database; using Firebase.Unity.Editor; .... // Set this before calling into the realtime database. FirebaseApp.DefaultInstance.SetEditorDatabaseUrl(\u0026#34;https://YOUR-FIREBASE-APP.firebaseio.com/\u0026#34;); FirebaseDatabase.DefaultInstance .GetReference(\u0026#34;test\u0026#34;) .GetValueAsync().ContinueWith(task =\u0026gt; { if (task.IsFaulted) { // Handle the error...  } else if (task.IsCompleted) { DataSnapshot snapshot = task.Result; // Do something with snapshot...  Debug.Log (snapshot.Value); } });   \nFirebaseApp.DefaultInstance.SetEditorDatabaseUrl(\u0026ldquo;https://YOUR-FIREBASE-APP.firebaseio.com/\u0026quot;);\nの「https://YOUR-FIREBASE-APP.firebaseio.com/」にはRealtime Databaseページのリンク（上の画像で黒塗りしている部分）を設定します。\nGetReference(\u0026ldquo;test\u0026rdquo;)で名前を指定します。\n上記の設定を行うことで、snapshot.Valueより「11」の値が取得できます。\n説明は以上です。\n","href":"https://comboeng.github.io/game/posts/howto7/","tags":["FirebaseRealtime"],"title":"アプリに FirebaseRealtime Database を追加する手順"},{"categories":["プログラム"],"contents":"目的 ボタンを押した時に処理をしたい場合の手順メモ\nUnityのバージョン  version 2019.4.10f1  ボタンの作成 UnityのHierarchyより右クリックメニューで「UI」→「Button」を選択。\nボタンの表記文字を変えたい場合は、Buttonを展開してTextを選択後、\nInspectorより修正する。\n実行プログラムの追加 次にプログラムツールより、適切なクラスにボタンをタップした時の処理を設定する。\nボタンの処理 public void OnClickButton1() { Debug.Log(\u0026#34;OnClickButton1\u0026#34;); }   \nUnityに戻り、ボタンのInspectorの「On Click()」の「＋」ボタンをクリック。\n先程作成したクラスのメソッドを選択する。\nこれで実装完了。\n確認 アプリ実行後、ボタンをタップすると、コンソールにログが出力されている。\n","href":"https://comboeng.github.io/game/posts/howto6/","tags":["button"],"title":"button(ボタン)のタップ処理"},{"categories":["アセット"],"contents":"目的 PUN 2(photon unity network 2)というネットワークで多人数と同期ゲームができる\nアセットの導入部分のメモ\n参照サイト この記事内のことは、以下の公式サイトでやっていることのまとめです。\nPUN2で始めるオンラインゲーム開発入門【その１】\n公式サイトにてユーザ登録 (https://www.photonengine.com/)[https://www.photonengine.com/]\nにアクセス。\nTRY PHOTON FREEをクリック。\nメアド登録後、メールを確認。\nメールよりパスワード選択画面に誘導されるので、登録。\nアプリ登録 ユーザ登録後、以下画面に遷移する。\nCREATE A NEW APPでアプリ登録へ\nPhoton Typeについて、\nとりあえずデフォルトの「Photon Realtime」としました。\n似たような機能で「Photon PUN」があるようで、性能や有料にした場合の価格が違うようですが、、PUNの方が高機能的な記述も見ました。\nNameとかは適切に。\n登録後は、表記されたAPP IDをメモします。\nアセットストアでインポート アセットストアにて「PUN 2 無料版」をインポートします。\n先程メモしたAppidを入力します。\nInspectorの値は以下にした。参照サイトを参考に。\nGameObjectという空のオブジェクトを作り、「SampleScene」というスクリプトを作成します。\nスクリプトの内容は参照サイトと全く一緒なので、そちらにて。\n次にAssetsフォルダ配下に「Resources」フォルダを作り、「GamePlayer」というオブジェクトを作ります。\n名前とか違うとエラーになりました。\nGamePlayerの設定も参照サイトとほぼ同じです。\nUnityのFileメニューより「Build And Run」を実行して、アプリを起動します。\n次にUnityの「Play」ボタンを実行します。\nそうすると先程実行したアプリにもう一つオブジェクトが追加されています。\n一応、これでマッチングができていると思います。\n移動できて、それぞれ違う動き出来たらもっと分かりやすいですね。\n","href":"https://comboeng.github.io/game/posts/pun2_2/","tags":["PUN2"],"title":"PUN 2を導入してみる"},{"categories":["プログラム"],"contents":"目的 キャラクターに既存のアニメーションを追加設定して、「SPACE」キーをタップした時そのアニメーションを実行するようにする時の手順メモ\n※アニメーションについては、入手したAssetに付いているものを利用します。ここではアニメーションの作成方法は記載していません。\n環境  Mac OS Unity version 2019.4.10f1  Animator画面について Unityの「Window」メニューより「Animation」→「Animator」を選択します。\nAnimator画面が表示されます。\n冒頭にも記載しましたが、すでにアニメーション(Animator)設定されているAssetのPrefabキャラクターを利用しています。\nこの状態で一旦アプリを実行します。\nそうすると、以下のようにゲージが表示されているステートメントがあることが分かります。\n以下の場合、「TH Sword Idle」ステートメントが標準で実施されている状態です。\n今回は「TH Sword Idle」ステートメントから「TH Dash Without Root Motion」に状態を遷移させたいと思います。\nトランザクションについて 起動時のステートメント「TH Sword Idle」と遷移させたいステートメント「TH Dash Without Root Motion」が決まったら、それを結ぶトランザクション（矢印⇄の事）をクリックします。\n画面右のConditions欄に「TH Sword Dash」が「true」となっていることが確認できます。\nちなみに上記では、既にトランザクションが設定されています。設定されていない場合はステートメントを右クリックすることでトランザクションを設定できます。\nということで、「TH Sword Dash」をtrueにすると、「TH Sword Idle」ステートメントから「TH Dash Without Root Motion」に遷移できることが分かります。\nプログラムでトランザクションを設定 次にプログラムで「TH Sword Dash」をtrueにする設定を行います。\nまず、キャラクターにScriptコンポーネントを追加します。\nScriptコンポーネントの内容は以下とします。\nUnityやC#にそこまで精通していないので、書き方お作法違ったらスミマセン。\nScriptコンポーネント public class PlayerScript : MonoBehaviour { Animator animator; bool flagDash; // Start is called before the first frame update  void Start() { animator = GetComponent\u0026lt;Animator\u0026gt;(); flagDash = false; } // Update is called once per frame  void Update() { if (Input.GetButtonDown(\u0026#34;Jump\u0026#34;)) { flagDash = !flagDash; animator.SetBool(\u0026#34;TH Sword Dash\u0026#34;, flagDash); } if (flagDash) { transform.position += transform.forward * Time.deltaTime * 5; } } }    Start()で\nアタッチしているキャラクターのAnimatorを取得。\nフラグ設定・flagDashがtrueの時ダッシュ！\nUpdate()で\nJumpキー＝「SPACE」キーをタップするとフラグ変更とAnimatorにある「TH Sword Dash」をフラグの通りに。\nダッシュ中はキャラクターを移動させる。\nTime.deltaTimeとかなんぞ！？という方は冒頭の参照リンクを見てください。\n確認 準備が出来たので、アプリを実行します。\nSPACEキーでキャラクターが動くことを確認。\npic.twitter.com/pUEzeVbnPd\n\u0026mdash; タッコング (@IT67709618) September 16, 2020  ","href":"https://comboeng.github.io/game/posts/howto5/","tags":["キー操作"],"title":"キャラクターにアニメーションを設定して、キー操作で動かす。"},{"categories":["アセット"],"contents":"またキャンペーンやってます。 冬キャンペーン2020と題して、またUnityアセットキャンペーンやってます。\n一部のアセットが70％オフ!\n冬キャンペーン2020\nさらに700のアセットアセットが50%オフとなっています。\n70%オフのアセットは興味を引くものは無かったですね。\n50％オフでほしかったものが安くなってたので、購入。\n","href":"https://comboeng.github.io/game/posts/asset4/","tags":["キャンペーン"],"title":"冬キャンペーン2020"},{"categories":["プログラム"],"contents":"AnimationControllerの整理 以下のYouTube動画ですが、 AnimationControllerの整理だけでなく、アニメーションの遷移タイミングの修正方法や、\nパーティクルの制御方法など、\n動画上で完結に説明してくれている。\n良い動画だなと思いました。\nこんがらがったAnimationControllerを整理する\n以上、メモだけでした。\n","href":"https://comboeng.github.io/game/posts/howto4/","tags":["AnimationController"],"title":"AnimationController整理[リンク]"},{"categories":["プログラム"],"contents":"この記事について PUN2の入門ドキュメント webサイトのまとめです。\n公式サイトの大項目をまとめているだけです。\nPUN2で始めるオンラインゲーム開発入門【その１】\n Photon初期設定について 重要クラスについて（PhotonNetwork、PhotonView） 他プレイヤーの画面の表示について マッチング後のシーン遷移移動の注意点 MonoBehaviourPunCallbacksを継承を使わない 開発用GUIコンポーネントについて Photon Cloudの利用で作れるゲーム・作れないゲーム  PUN2で始めるオンラインゲーム開発入門【その２】\n 自分のオブジェクトだけ操作 座標を同期させる最も簡単なやり方 任意の値を定期的に同期させるには メッセージの送信頻度を調整 必要な場合のみ送信してメッセージ数を節約 座標の同期を独自実装 座標を同期（その他） 3次スプライン補間を利用  PUN2で始めるオンラインゲーム開発入門【その３】\n 弾を発射 弾を発射の同期 オブジェクトプールでの管理 被弾処理を同期 サーバー時刻を活用しよう RPCメソッドのキャッシュ RPCメソッドの名前  PUN2で始めるオンラインゲーム開発入門【その４】\n プレイヤー名の同期 プレイヤー設定の同期 拡張メソッドを利用する ルームの設定を同期 カスタムプロパティ更新時の注意点 カスタムプロパティのキー 効率的なカスタムプロパティについて 任意のデータ型を通信できるようにする メッセージサイズ最適化  PUN2で始めるオンラインゲーム開発入門【その５】\n 最適な同期方法について 効率的にプレイヤーを管理 プレイヤー同士のマッチング方法の決め方 所有権とシーンオブジェクト 排他制御でアイテムデュープ対策 ネットワークカリングで通信量を削減  PUN2で始めるオンラインゲーム開発入門【その６】\n Resources外からネットワークオブジェクトを生成 オフラインモード 浮動小数点数の通信データ圧縮について  重要項目がかなり多い割には、ページ数多いし、 以上。\n","href":"https://comboeng.github.io/game/posts/pun2/","tags":[""],"title":"PUN2 入門ドキュメント"},{"categories":["アセット"],"contents":"エラーについて 体力ゲージとかで使うアセット「Energy Bar Toolkit」\nですが、WebGL向けなどにビルドしようとすると、エラーになりますね。\nもしかしたら私の環境だけかもですが。\nビルドエラー UnityEngine.GUIUtility:ProcessEvent(Int32, IntPtr) (at /Users/bokken/buildslave/unity/build/Modules/IMGUI/GUIUtility.cs:197)   unity Asset Store Energy Bar Toolkit ここのコメント欄でもエラーについて対応方法書いている人がいますが。\nこの方法でも解決せずで、解決方法も不明です。\n","href":"https://comboeng.github.io/game/posts/asset3/","tags":["Energy Bar Toolkit"],"title":"「Energy Bar Toolkit」アセットがエラーになりますね"},{"categories":["アセット"],"contents":"独身の日セールとは  独身の日とは 中国では「独身」を連想する 1が 4つ並ぶ11月11日を「光棍節」と呼んで祝う、 日本や欧米における「Black Friday」並みのセールシーズンなのだそうです。 一昨年から Unityアセットストアでは、 中国とは海を挟んでお隣でもある日本と東南アジア各国にも対象を拡げて お祝いの特大タイムセールを行っています。     いくつかのアセットが50%オフ、70%オフとなっている。\n注意点  独身でない人も購入可能^^; 最大20回歯科利用できない。 アセット画面では通常価格が表示される。支払い時に指定されたクーポンを入力しないと割引されない 異なる割引率のアセットを一緒に購入しても、適用されない。  特に3,4点目が注意でかなりのkuso仕様\nオフセールフィルターには引っかかるけど、通常表示価格になる。   クーポンは以下\nクーポン どなたでも使えるクーポン「SINGLESDAY50OFF」で、4000点以上のアセットが 50%オフ どなたでも使えるクーポン「SINGLESDAY70OFF」で、70点以上の特別対象アセットが 70%オフ  \n購入したもの  Asset Hunter PRO Easy Mobile Pro Anti-Cheat Toolkit Beautify 2 全部で$66ほど 飲み代節約しないと TT  Asset Hunter PROが通常で50％OFFしていて、まさかそこから更に70％OFFか！？と思ったけど、そんな事なかった。\n","href":"https://comboeng.github.io/game/posts/asset2/","tags":["アセットセール"],"title":"独身の日でアセットセールやってるぞ"},{"categories":["プログラム"],"contents":"このページについては、個人的見解も多く含んでいます。 見解ミス部分の参照による第三者の責任負担は出来ませんので、了承ください。参照程度としてください。\nレンダーパイプライン（レンダリングパイプライン） グラフィックスパイプライン Wikipediaより\n3次元コンピュータグラフィックスの計算処理方法の1つであり、 3次元モデルのデータから2次元画像のイメージを作り出す多段階の過程全体を指し、 それらの計算をパイプライン処理によって高速化する手法を示す。 グラフィックスパイプラインは、時間のかかるレンダリング処理の高速化に注力している。 あとは以下のサイトの説明が最強なので、こっちを参照してください。\nUnityのレンダーパイプライン\nURP:モバイル向け HDRP:PC向け マテリアル 一般的だと材料、物質のことで、\nUnityだとオブジェクトの見た目とか色味とかの事とかそれを設定する事。\nまだちょっとわかりにくい？\nシェーダー 以下のサイトが概念的には分かりやすそう。\n渋谷ほととぎす通信　「シェーダ」とは何なのか、を自分の言葉でまとめてみる\n3Dオブジェクトをディスプレイに映し出すためのプログラム プログラムというとプログラミング言語というイメージになってしまうのですが、処理ということですかね。\nその処理がレンダーパイプラインとのことですが、シェーダーはそのレンダーパイプラインに含まれる処理の1部のよう\nパーティクル 粒子のこと。粒子で現象（爆発とか流れ）を表現する。\nエフェクト 効果のこと。正直パーティクルとの棲み分けが不明。\nパーティクルエフェクトとか言われたりするし。\nブルーム エフェクトの一種。\nエクスプラボ 【Unity】世界が変わるBloom(ブルーム)の使い方【Post Processing】\nシーン内の光源から放出される光が、 あたかも他のオブジェクトに映り込んでいるような表現を追加するエフェクトです。 うーん。まだわからん。\nレンダリング レンダリング (コンピュータ) - Wikipedia\nデータ記述言語やデータ構造で記述された抽象的で高次の情報から、コンピュータのプログラムを用いて画像・映像・音声などを生成することをいう。 オーサリングツール オーサリングツール - Wikipedia\nコンピュータでいわゆるメディアコンテンツを作るためのアプリケーションソフトウェアである。 テクスチャ テクスチャ - Wikipedia\n物の表面の質感・手触りなどを指す概念である。 3次元コンピュータグラフィックスで作成された3Dモデル表面に質感を与えるための手法。 ノードベース HoudiniBBAの台所 「ノードベース」とか「プロシージャル」を雑に解説する【超のつく初心者向け】\n処理の流れを設計図のように残しながら(作りながら?)、 画を仕上げていくのが 難しい。\n","href":"https://comboeng.github.io/game/posts/howto3/","tags":["理解できない単語"],"title":"Unityですぐに理解できない単語"},{"categories":["プログラム"],"contents":"この記事について フォントを変更する際のオススメフォントや変え方のメモです。\nオススメフォント 権利的に利用し易くくださっている\nM+ FONTS mplus-1mn-mediumを使うようにした。\n変更方法 unity フォント\nフォント形式は.ttfか.otf\nTextのInspectorのFontで設定する。\n結果   ","href":"https://comboeng.github.io/game/posts/howto2/","tags":["フォント"],"title":"フォントの変え方メモ"},{"categories":["アセット"],"contents":"2020年10月現在で気になるUnityアセット\n画像クリックでstoreに飛べます。\n2020年10月現在で気になるUnityアセット 画像クリックでstoreに飛べるようにします。\n購入方針 基本的に便利なもの・人気があるものは高い！\nセールになるまで待つ。\nただ、欲しい物で1年待ってるとかであれば、買ったほうが良い。\n人気のものはだんだん値上がりする傾向がある。\n便利そうで、将来使うかもな〜というのは買わない。使わないことが多い。\nUnityのバージョンアップで使えなくなるアセットが結構ある。有料・人気のモノはだいたい対応してくれるけど。\nあと、ずっとUnityを使い続けるんですか？Unreal Engineに移行したりしませんか？とかの将来も。\nSEとかは腐らないので、買って良いと思う。\nあとスマホを作る時は、アセットがスマホに対応しているかも調べる。\n参照サイト https://www.youtube.com/watch?v=7GUFekIo5v8\nhttps://www.youtube.com/watch?v=GsY6j0TeVu8\nhttps://www.youtube.com/watch?v=Oj9GTIbp0lM\nPixel UI 2Dゲームに利用できそうなUIデザインのサンプル。\nアニメーションとかも付いていて良さそう。\nただちょっとドット色が強すぎる感じはする。\n   Frost - Complete UI PCゲームに利用できそうなUIサンプル。\nアニメーション具合が人気のゲームのものそのまんま。\nPCゲームは今の所作る予定無いけど。\n   Procedural UI Image フラットでシンプルなUI。一つ一つの形状をリソースを使うことなく、コンポーネントでUIの形状を作成できる。\nサンプル画像からおそらくスマホにも対応しているようで、気になっています。\n   Peek - Editor Toolkit ヒエラルキーやインスペクターとかの邪魔な表示を取り除けて、Sceneでクリックで表示させることができる。\n   Editor Console Pro テキスト、ファイル名、クラス、ゲームオブジェクトをフィルターできたり、正規表現で検索できたりする。\n今の所いらないけど、必要なときも来るかもということでメモ。\n   Rainbow Folders 2 フォルダの色分けや背景色、アイコン設定などできるようです。\nかなり欲しい。\nUnityってデフォルトでアイコンとか変わらないので、これを導入すれば、見やすくなるかなと思う。\n変える方法あるのかもしれないけど、、まぁ、簡単に変えられるんだったら、このアセットこんなに売れてないかなと。\n   Anti-Cheat Toolkit チート対策ツール。\nゲームとかでは必須級なアセットだけど、、、高い。\n   I2 Localization ローカライズが簡単にできるアセット。\n絶対に欲しいので、セールの時を待つ。\n   Exploder メッシュなどのオブジェクトを爆発できるアセット。\n物を壊すエフェクトを用いる機会は結構多いので、買っておきたい。\n$35だけど、もう少し安くならないか。。。\n   Exploder ノードベースで敵のAIとかを作れる。\n     ","href":"https://comboeng.github.io/game/posts/asset1/","tags":["気になるアセット"],"title":"気になるアセット"},{"categories":["プログラム"],"contents":"ここの神サイトを見てください。\n(:3[kanのメモ帳]引数を渡して遅延処理【Unity】【拡張メソッド】\n上記サイトの\nMonoBehaviorExtentsionを作成し\n記事内人同じく\nStartCoroutine(this.DelayMethod(1.0f, メソッド名, 引数));\nで利用できます。\n","href":"https://comboeng.github.io/game/posts/howto1/","tags":["遅延処理"],"title":"遅延して処理する方法"},{"categories":["レビュー"],"contents":"  2020年10月で一番面白いと思えるゲーム。\nもちろん仕様的に嫌と思える部分や、リリースからだいぶ経っていて、過疎を感じる部分もある。\n基本ルール 100体を超えるキャラクターから8体を選んで、\n戦場に良いタイミングで、状況を良くするキャラクターを置くだけ\nキャラクターはAIで自動行動する。\n面白いと思える点  新規キャラゲットにガチャは必要としない、ほぼ必ず手に入れられる。 キャラクターのゲームバランス調整が随時行われている。 キャラの性能が三すくみ関係になっている。 +αのルールがあり、飽きない工夫がある。 ユニークな3Dキャラ  つまらないと思える点  煽りアイコンがある\nバトル中煽りとも取れるアイコンを表示させることができる。\nアイコンを表示させないことも設定で可能なので、そこまで比重はない。 プレイヤーレベルやキャラクターレベル差の影響がかなりある。 それぞれのキャラレベルを容易にあげられない。 なので、それぞれのレベルがカンストしてからが本番という面もある。 課金したとしても半年ぐらいかかるのでわ。  ","href":"https://comboeng.github.io/game/posts/crash1/","tags":["クラロワ"],"title":"クラッシュ ロワイヤル 今一番ハマっています"}]